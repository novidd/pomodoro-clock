{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Clock","props","state","break","session","breakMin","sessionMin","sec","counter","timeOutId","undefined","event","timerIsOn","handleBreak","bind","handleSession","resetValues","handleTimer","runTimer","stopTimer","e","this","target","id","setState","clearTimeout","document","getElementById","pause","currentTime","timeOut","setTimeout","play","src","className","onClick","value","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.493cb53b.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      break: 5,\n      session: 25,\n      breakMin: 5,\n      sessionMin: 25,\n      sec: 60,\n      counter: 0,\n      timeOutId: undefined,\n      event: \"session\",\n      timerIsOn: false,\n    };\n\n    this.handleBreak = this.handleBreak.bind(this);\n    this.handleSession = this.handleSession.bind(this);\n    this.resetValues = this.resetValues.bind(this);\n    this.handleTimer = this.handleTimer.bind(this);\n    this.runTimer = this.runTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n  handleBreak(e) {\n    if (!this.state.timerIsOn) {\n      switch (e.target.id) {\n        case \"break-increment\":\n          if (this.state.break < 60) {\n            this.setState({\n              break: this.state.break + 1,\n              breakMin: this.state.break + 1,\n            });\n          }\n          if (this.state.event === \"break\") {\n            this.setState({\n              sec: 60,\n            });\n          }\n          break;\n        case \"break-decrement\":\n          if (this.state.break > 1) {\n            this.setState({\n              break: this.state.break - 1,\n              breakMin: this.state.break - 1,\n            });\n          }\n          if (this.state.event === \"break\") {\n            this.setState({\n              sec: 60,\n            });\n          }\n          break;\n        default:\n          return;\n      }\n    }\n  }\n  handleSession(e) {\n    if (!this.state.timerIsOn) {\n      switch (e.target.id) {\n        case \"session-increment\":\n          if (this.state.session < 60) {\n            this.setState({\n              session: this.state.session + 1,\n              sessionMin: this.state.session + 1,\n            });\n          }\n          if (this.state.event === \"session\") {\n            this.setState({\n              sec: 60,\n            });\n          }\n          break;\n        case \"session-decrement\":\n          if (this.state.session > 1) {\n            this.setState({\n              session: this.state.session - 1,\n              sessionMin: this.state.session - 1,\n              sec: 60,\n            });\n          }\n          if (this.state.event === \"session\") {\n            this.setState({\n              sec: 60,\n            });\n          }\n          break;\n        default:\n          return;\n      }\n    }\n  }\n  resetValues() {\n    clearTimeout(this.state.timeOutId);\n    document.getElementById(\"beep\").pause();\n    document.getElementById(\"beep\").currentTime = 0;\n    this.setState({\n      break: 5,\n      session: 25,\n      sessionMin: 25,\n      breakMin: 5,\n      sec: 60,\n      event: \"session\",\n      timerIsOn: false,\n    });\n  }\n  handleTimer() {\n    if (this.state.timerIsOn) {\n      //Stop Timer\n      this.setState({\n        timerIsOn: false,\n      });\n      this.stopTimer();\n    } else if (!this.state.timerIsOn) {\n      //Start Timer\n      this.setState({\n        timerIsOn: true,\n      });\n      let timeOut = setTimeout(this.runTimer, 1000);\n      this.setState({\n        timeOutId: timeOut,\n      });\n    }\n  }\n  runTimer() {\n    if (this.state.sessionMin === 0 && this.state.sec === 0) {\n      this.setState({\n        event: \"break\",\n        sessionMin: this.state.session,\n        breakMin: this.state.break,\n      });\n      document.getElementById(\"beep\").play();\n      let timeOut = setTimeout(this.runTimer, 1000);\n      this.setState({\n        timeOutId: timeOut,\n      });\n      return;\n    } else if (this.state.breakMin === 0 && this.state.sec === 0) {\n      this.setState({\n        event: \"session\",\n        sessionMin: this.state.session,\n        breakMin: this.state.break,\n      });\n      document.getElementById(\"beep\").play();\n      let timeOut = setTimeout(this.runTimer, 1000);\n      this.setState({\n        timeOutId: timeOut,\n      });\n      return;\n    }\n    if (this.state.sec === 0) {\n      this.setState({\n        sec: 60,\n      });\n    }\n    if (this.state.sec === 60 && this.state.event == \"session\") {\n      this.state.sessionMin--;\n    } else if (this.state.sec === 60 && this.state.event == \"break\") {\n      this.state.breakMin--;\n    }\n    this.state.sec--;\n    let timeOut = setTimeout(this.runTimer, 1000);\n    this.setState({\n      timeOutId: timeOut,\n    });\n  }\n  stopTimer() {\n    clearTimeout(this.state.timeOutId);\n    this.setState({\n      timerIsOn: false\n    });\n  }\n  render() {\n    return (\n      <div id=\"clock\">\n        <audio id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n        <div id=\"timer-wrapper\">\n          <div id=\"labels-timer-wrapper\">\n            <div id=\"break-wrapper\" className=\"labels-inner-wrapper\">\n              <h1 id=\"break-label\">Break Length</h1>\n              <div className=\"button-wrapper\">\n                <button\n                  onClick={this.handleBreak}\n                  className=\"btn\"\n                  id=\"break-increment\"\n                >\n                  +\n                </button>\n                <h2 id=\"break-length\" value=\"\">\n                  {this.state.break}\n                </h2>\n                <button\n                  onClick={this.handleBreak}\n                  className=\"btn\"\n                  id=\"break-decrement\"\n                >\n                  -\n                </button>\n              </div>\n            </div>\n            <div id=\"session-wrapper\" className=\"labels-inner-wrapper\">\n              <h1 id=\"session-label\">Session Length</h1>\n              <div className=\"button-wrapper\">\n                <button\n                  onClick={this.handleSession}\n                  className=\"btn\"\n                  id=\"session-increment\"\n                >\n                  +\n                </button>\n                <h2 id=\"session-length\">{this.state.session}</h2>\n                <button\n                  onClick={this.handleSession}\n                  className=\"btn\"\n                  id=\"session-decrement\"\n                >\n                  -\n                </button>\n              </div>\n            </div>\n            <div>\n            <div id=\"time-wrapper\">\n              <h2 id=\"timer-label\">{this.state.event}</h2>\n              <h1 id=\"time-left\">\n                {this.state.event === \"session\" && this.state.sessionMin < 10\n                  ? \"0\"\n                  : \"\"}\n                {this.state.event === \"break\" && this.state.breakMin < 10\n                  ? \"0\"\n                  : \"\"}\n                {this.state.timerIsOn && this.state.event === \"session\"\n                  ? this.state.sessionMin\n                  : this.state.event === \"session\"\n                  ? this.state.sessionMin\n                  : \"\"}\n                {this.state.timerIsOn && this.state.event === \"break\"\n                  ? this.state.breakMin\n                  : this.state.event === \"break\"\n                  ? this.state.breakMin\n                  : \"\"}\n                :{this.state.sec < 10 ? \"0\" : \"\"}\n                {this.state.timerIsOn && this.state.sec === 60\n                  ? \"00\"\n                  : this.state.timerIsOn\n                  ? this.state.sec\n                  : this.state.sec !== 60 ? this.state.sec : \"00\"}\n              </h1>\n            </div>\n              <div id=\"timer-button-wrapper\">\n                <button\n                  onClick={this.handleTimer}\n                  className=\"timer-btn\"\n                  id=\"start_stop\"\n                >\n                  {!this.state.timerIsOn && (\n                    <i className=\"fas fa-play-circle fa-3x\"></i>\n                  )}\n                  {this.state.timerIsOn && (\n                    <i className=\"fas fa-pause-circle fa-3x\"></i>\n                  )}\n                </button>\n                <button onClick={this.resetValues} className=\"timer-btn\" id=\"reset\">\n                  <i className=\"fas fa-undo fa-3x\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Clock from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Clock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}